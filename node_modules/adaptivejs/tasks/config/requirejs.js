
module.exports = function(grunt) {
    var adaptationOptions = {
        almond: true,
        mainConfigFile: './adaptation/config.js',
        wrap: true,
        keepBuildDir: true,

        optimize: 'none',
        preserveLicenseComments: false,
        generateSourceMaps: true,

        name: './main',
        out: './build/adaptive.js',
        paths: {
            'text': '../node_modules/adaptivejs/bower_components/requirejs-plugins/lib/text',
            'json': '../node_modules/adaptivejs/bower_components/requirejs-plugins/src/json',
            'mobifyjs': '../node_modules/adaptivejs/node_modules/mobifyjs/src',
            'mobifyjs/utils': '../node_modules/adaptivejs/node_modules/mobifyjs-utils/utils',
            'devSettings': 'devSettings',
            'settings': '../node_modules/adaptivejs/lib/settings',
            'adaptivejs': '../node_modules/adaptivejs/src',
            '$': '../node_modules/adaptivejs/src/selectorLibrary',
            'dust': '../node_modules/adaptivejs/lib/dust-requirejs',
            'dust-custom': '../node_modules/adaptivejs/lib/dustPatch',
            'dust-core': '../bower_components/dustjs-linkedin/dist/dust-core',
            'dust-full': '../bower_components/dustjs-linkedin/dist/dust-full',
        },
        shim: {
            'dust-core': {
                'exports': 'dust'
            },
            'dust-full': {
                'exports': 'dust'
            }
        },
        stubModules: ['text', 'json', 'dust'],
        exclude: ['dust-full']
    };

    var uiOptions = {
        removeCombined: true,
        name: './main',
        mainConfigFile: 'assets/js/ui/config.js',

        optimize: 'none',
        preserveLicenseComments: false,
        generateSourceMaps: true,

        // Import Almond for use within UI scripts
        wrap: {
            start:
                "(function(require, define, window, document) {\n",
            end:
                "})(Adaptive.AMD.require" +
                ", Adaptive.AMD.define" +
                ", window" +
                ", document" +
                ")\n\n"
        },
        out: './build/js/ui.js',
        paths: {
            'external': '../../../node_modules/adaptivejs/lib/external-requirejs',
            'dust': '../../../node_modules/adaptivejs/lib/dust-requirejs',
            'dust-full': '../../../bower_components/dustjs-linkedin/dist/dust-full',
            'dust-custom': 'empty:',
            'dust-core': 'empty:',
            '$': 'empty:'
        },
        shim: {
            'dust-core': {
                'exports': 'dust'
            },
            'dust-full': {
                'exports': 'dust'
            }
        },
        stubModules: ['dust'],
        exclude: ['dust-full']
    };

    return {
        // Building adaptive.js
        adaptation: {
            options: adaptationOptions
        },
        adaptationMin: {
            options: grunt.util._.extend(
                grunt.util._.clone(adaptationOptions),
                {
                    optimize: 'uglify2',
                    generateSourceMaps: false,
                    out: './build/adaptive.min.js',
                    paths: grunt.util._.extend(
                        grunt.util._.clone(adaptationOptions.paths),
                        {
                            'settings': '../node_modules/adaptivejs/lib/stubSettings'
                        }
                    )
                }
            )
        },
        // Building front-end UI scripts (ui.js)
        ui: {
            options: uiOptions
        },
        uiMin: {
            options: grunt.util._.extend(
                grunt.util._.clone(uiOptions),
                {
                    optimize: 'uglify2',
                    generateSourceMaps: false,
                    out: './build/js/ui.min.js'
                }
            )
        }

    };
};
